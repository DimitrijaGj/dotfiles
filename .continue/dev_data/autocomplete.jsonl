{"time":4,"completion":"#include <iostream>\nusing namespace std;\nint main() {\n    int a,b;\n    cin>>a>>b;\n    cout<<(a+b)<<endl;\n    return 0;\n}","prefix":"// Untitled-1\n\n","suffix":"\n","prompt":"<｜fim▁begin｜>// Untitled-1\n\n<｜fim▁hole｜>\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"Untitled-1","completionId":"c19efc4d-04aa-4a5e-b6d3-13be7930cbc2","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":false}
{"time":3,"completion":"#include <iostream>\nusing namespace std;\nint main() {\n    int a,b;\n    cin>>a>>b;\n    cout<<(a+b)<<endl;\n    return 0;\n}","prefix":"// Untitled-1\n\n","suffix":"\n","prompt":"<｜fim▁begin｜>// Untitled-1\n\n<｜fim▁hole｜>\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"Untitled-1","completionId":"a6ff4627-4959-48bd-b262-086bd77bd585","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":false}
{"time":10,"completion":"#include <iostream>\nusing namespace std;\nint main() {\n    int a,b;\n    cin>>a>>b;\n    cout<<(a+b)<<endl;\n    return 0;\n}","prefix":"// Untitled-1\n\n","suffix":"\n","prompt":"<｜fim▁begin｜>// Untitled-1\n\n<｜fim▁hole｜>\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"Untitled-1","completionId":"d3f6e561-c806-4df1-9ba0-8c4b945add88","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":false}
{"time":1736,"completion":"echo \"File does not exist\"","prefix":"#!/bin/bash\nFILE_PATH=\"~/Documents/training/\"\nfor [ ! -f \"{$FILE_PATH}\" ] do;\n    ","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\nFILE_PATH=\"~/Documents/training/\"\nfor [ ! -f \"{$FILE_PATH}\" ] do;\n    <｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_test.sh","completionId":"634127f6-2a08-4d3d-9228-f44204405be6","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":false}
{"time":2488,"completion":"for file in \"${FILES[@]}\"; do\n    if [[ -f \"$DIR$file\" ]]; then\n        echo \"File '$DIR$file' exists.\"\n    else\n        echo \"File '$DIR$file' does not exist.\"\n    fi\ndone","prefix":"#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\n","suffix":"\n\n\n","prompt":"<｜fim▁begin｜>#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\n<｜fim▁hole｜>\n\n\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:16b","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"fb6908d2-637b-484f-b35d-9e4d902c9a79","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":false}
{"time":10,"completion":"for file in \"${FILES[@]}\"; do\n    if [[ -f \"$DIR$file\" ]]; then\n        echo \"File '$DIR$file' exists.\"\n    else\n        echo \"File '$DIR$file' does not exist.\"\n    fi\ndone","prefix":"#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\n","suffix":"\n\n\n\n","prompt":"<｜fim▁begin｜>#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\n<｜fim▁hole｜>\n\n\n\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:16b","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"f0002e61-12ff-49f8-8635-c0b8041a34bd","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":true}
{"time":82232,"completion":"-O http","prefix":"#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\nfor file in \"${FILES[@]}\"; do\n    if [[ -f \"$DIR$file\" ]]; then\n        echo \"File '$DIR$file' exists.\"\n    else\n        echo \"File '$DIR$file' does not exist.\"\n    fi\ndone\n# curl the images from web page\n    curl    ","suffix":"\n\n\n","prompt":"<｜fim▁begin｜>#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\nfor file in \"${FILES[@]}\"; do\n    if [[ -f \"$DIR$file\" ]]; then\n        echo \"File '$DIR$file' exists.\"\n    else\n        echo \"File '$DIR$file' does not exist.\"\n    fi\ndone\n# curl the images from web page\n    curl    <｜fim▁hole｜>\n\n\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:16b","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"4e000701-bbc4-4fbd-99b3-07acb351a449","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":false}
{"time":17,"completion":"-O http","prefix":"#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\nfor file in \"${FILES[@]}\"; do\n    if [[ -f \"$DIR$file\" ]]; then\n        echo \"File '$DIR$file' exists.\"\n    else\n        echo \"File '$DIR$file' does not exist.\"\n    fi\ndone\n# curl the images from web page\n    curl    ","suffix":"\n\n\n","prompt":"<｜fim▁begin｜>#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\nfor file in \"${FILES[@]}\"; do\n    if [[ -f \"$DIR$file\" ]]; then\n        echo \"File '$DIR$file' exists.\"\n    else\n        echo \"File '$DIR$file' does not exist.\"\n    fi\ndone\n# curl the images from web page\n    curl    <｜fim▁hole｜>\n\n\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:16b","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"50ffbaca-d0b1-426b-a958-88dec5329379","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":false}
{"time":14,"completion":"if folder is not present create it and","prefix":"#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\nfor file in \"${FILES[@]}\"; do\n    if [[ -f \"$DIR$file\" ]]; then\n        echo \"File '$DIR$file' exists.\"\n    else\n        echo \"File '$DIR$file' does not exist.\"\n    fi\ndone\n#","suffix":"\n\n\n","prompt":"<｜fim▁begin｜>#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\")\n#check if folder is present and print it\nif [ 1 -d \"$DIR\" ]; then\n    echo \"Directory $DIR exists\"\n#loop through list for images\n    for FILE \n\n# print all files from FILES\nfor file in \"${FILES[@]}\"; do\n    if [[ -f \"$DIR$file\" ]]; then\n        echo \"File '$DIR$file' exists.\"\n    else\n        echo \"File '$DIR$file' does not exist.\"\n    fi\ndone\n#<｜fim▁hole｜>\n\n\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:16b","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"49b02520-62c1-42f1-9ea1-0c1003dbf65c","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"accepted":false}
{"time":17795,"completion":"if not, download them from web","prefix":"#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\"\n#check if fotos are present in folder\nfor [d]\n#","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#make variables\nDIR=\"$HOME/sliki/\"\nFILES=(\"Slika1.jpg\" \"Slika2.jpg\"\n#check if fotos are present in folder\nfor [d]\n#<｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"8b436bf4-22e0-4148-a205-71e864d0f156","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":5384,"completion":"lsb_release -r | awk '{print $2}'","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(","suffix":")","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(<｜fim▁hole｜>)<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"4f2e3069-9a62-4153-abae-42a9b0d7f62e","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
{"time":2,"completion":"-oP 'VERSION=\"\\K[^\"]+' /etc/os-release)","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep ","suffix":"   )","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep <｜fim▁hole｜>   )<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"18cf8d73-4c89-43d3-9efc-d0d18a2110c9","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
{"time":20555,"completion":"\"$debian_version\" == \"Debian GNU/Linux 10 (buster)\" ]; then","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ ","suffix":"]","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ <｜fim▁hole｜>]<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"e2e16efe-67be-42d7-9b3c-a4bb61287097","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
{"time":1071,"completion":"\"$debian_version\" ]; then","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z ","suffix":"]","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z <｜fim▁hole｜>]<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"0e839be5-151f-437a-a540-005d09a4e75e","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":8,"completion":"echo \"This is not a Debian system.\"","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    ","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    <｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"1b1346fd-a0a1-4ff9-be2b-98d5261e1926","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":8,"completion":"exit 1","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    echo \"This is not a Debian system.\"\n    ","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    echo \"This is not a Debian system.\"\n    <｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"c441ed88-1658-4199-88de-c585dc5ddb83","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
{"time":4306,"completion":"else","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    echo \"This is not a Debian system.\"\n","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    echo \"This is not a Debian system.\"\n<｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"ba954f93-2533-4e34-9eda-fecacdf50b13","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":6,"completion":"echo \"The Debian version on this server is: $debian_version\"","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    echo \"This is not a Debian system.\"\nelse\n    ","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    echo \"This is not a Debian system.\"\nelse\n    <｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"d3967865-5cfe-4507-b9cc-618ceb4422f6","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":1182,"completion":"fi","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    echo \"This is not a Debian system.\"\nelse\n    echo \"The Debian version on this server is: $debian_version\"\n","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nif [ -z \"$debian_version\" ]; then\n    echo \"This is not a Debian system.\"\nelse\n    echo \"The Debian version on this server is: $debian_version\"\n<｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"420193c8-2621-4d94-b714-d66cf392e3ea","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
{"time":2890,"completion":"function check_debian_version() {","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\n","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\n<｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"803bf4f7-5633-4f91-8895-f0d31bb05ac2","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":6,"completion":"if [[ \"$debian_version\" == \"Debian 10\"* ]]; then","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nfunction check_debian_version() {\n    ","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nfunction check_debian_version() {\n    <｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"795599a1-cce9-45f1-bdcc-24e70cbf72ab","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":4,"completion":"echo \"This is Debian 10.\"","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nfunction check_debian_version() {\n    if [[ \"$debian_version\" == \"Debian 10\"* ]]; then\n        ","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nfunction check_debian_version() {\n    if [[ \"$debian_version\" == \"Debian 10\"* ]]; then\n        <｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"beeb7b22-da0c-4d0f-b86c-bede779b3944","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":4829,"completion":"# Run the script for Debian 10","prefix":"#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nfunction check_debian_version() {\n    if [[ \"$debian_version\" == \"Debian 10\"* ]]; then\n        echo \"This is Debian 10.\"\n            ","suffix":"","prompt":"<｜fim▁begin｜>#!/bin/bash\n#check the debian version on the server\ndebian_version=$(grep 'PRETTY_NAME' /etc/os-release | awk -F= '{print $2}' | tr -d '\"')\n#if function that checks debiasn version\nfunction check_debian_version() {\n    if [[ \"$debian_version\" == \"Debian 10\"* ]]; then\n        echo \"This is Debian 10.\"\n            <｜fim▁hole｜><｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/folder_chk.sh","completionId":"dc449fc7-76fa-4fc3-a5d6-d712c5abfb9c","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
{"time":14,"completion":"#include <iostream>\nusing namespace std;\nint main() {\n    int a,b;\n    cin>>a>>b;\n    cout<<(a+b)<<endl;\n    return 0;\n}","prefix":"// Untitled-1\n\n","suffix":"\n","prompt":"<｜fim▁begin｜>// Untitled-1\n\n<｜fim▁hole｜>\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"Untitled-1","completionId":"e14d09a6-75c4-4393-a4d3-bcb040657caf","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
{"time":3137,"completion":"meal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())","prefix":"\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\n","suffix":"\n","prompt":"<｜fim▁begin｜>\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\n<｜fim▁hole｜>\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/hackerrank.py","completionId":"a5aa5b08-c9a5-42fd-812e-ea7523328f81","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":603,"completion":"problem?","prefix":"\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above ","suffix":"\n","prompt":"<｜fim▁begin｜>\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above <｜fim▁hole｜>\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/hackerrank.py","completionId":"24e8bd3c-6892-4b32-a92a-0a775c85b11f","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
{"time":8714,"completion":"tip = meal_cost * (tip_percent / 100)\ntax = meal_cost * (tax_percent / 100)\ntotal_cost = round(meal_cost + tip + tax)\nprint(total_cost)","prefix":"\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\nmeal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())\n\n","suffix":"\n","prompt":"<｜fim▁begin｜>\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\nmeal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())\n\n<｜fim▁hole｜>\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/hackerrank.py","completionId":"e746c3d2-c6a9-4cdc-81a2-15eb7c7b9ea3","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":7,"completion":" total_cost():","prefix":"\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\nmeal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())\n#need to use in function for tax percent\ndef","suffix":"\n\n\n\n\n\n\n","prompt":"<｜fim▁begin｜>\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\nmeal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())\n#need to use in function for tax percent\ndef<｜fim▁hole｜>\n\n\n\n\n\n\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/hackerrank.py","completionId":"043b7f5c-5ec1-4f2e-812d-a23259e51170","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":8,"completion":"tip = meal_cost * (tip_percent / 100)\n    tax = meal_cost * (tax_percent / 100)\n    total = meal_cost + tip + tax\n    return round(total)\nprint(total_cost())","prefix":"\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\nmeal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())\n#need to use in function for tax percent\ndef total_cost():\n    ","suffix":"\n\n\n\n\n\n\n","prompt":"<｜fim▁begin｜>\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\nmeal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())\n#need to use in function for tax percent\ndef total_cost():\n    <｜fim▁hole｜>\n\n\n\n\n\n\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":false,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/hackerrank.py","completionId":"c36bc5ec-bab8-4a72-9af9-648b24e194b3","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":true}
{"time":6,"completion":"))","prefix":"\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\nmeal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())\n#need to use in function for tax percent\ndef total_cost():\n    tip = meal_cost * (tip_percent / 100)\n    tax = meal_cost * (tax_percent / 100)\n    total = meal_cost + tip + tax\n    return round(total)\nprint(total_cost(","suffix":"\n\n\n\n\n\n\n","prompt":"<｜fim▁begin｜>\"\"\"\nGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal's total cost. Round the result to the nearest integer.\n\nExample\n\n\n\nA tip of 15% * 100 = 15, and the taxes are 8% * 100 = 8. Print the value  and return from the function.\n\"\"\"\n#how to solve that above in comment\nmeal_cost = float(input())\ntip_percent = int(input())\ntax_percent = int(input())\n#need to use in function for tax percent\ndef total_cost():\n    tip = meal_cost * (tip_percent / 100)\n    tax = meal_cost * (tax_percent / 100)\n    total = meal_cost + tip + tax\n    return round(total)\nprint(total_cost(<｜fim▁hole｜>\n\n\n\n\n\n\n<｜fim▁end｜>","modelProvider":"ollama","modelName":"deepseek-coder-v2:latest","completionOptions":{"stop":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>","//","<｜end▁of▁sentence｜>"]},"cacheHit":true,"filepath":"/Users/dimitrijagjoshev/Documents/training/AI_Test/hackerrank.py","completionId":"a4762804-c3dc-4098-847e-8ebecb4e248b","uniqueId":"73b81e99211e45bd30549c6941185024da1ea02f2416438edeb2919af86f7ad5","disable":false,"useCopyBuffer":false,"useFileSuffix":true,"maxPromptTokens":500,"prefixPercentage":0.85,"maxSuffixPercentage":0.25,"debounceDelay":350,"multilineCompletions":"auto","slidingWindowPrefixPercentage":0.75,"slidingWindowSize":500,"maxSnippetPercentage":0.6,"recentlyEditedSimilarityThreshold":0.3,"useCache":true,"onlyMyCode":true,"useOtherFiles":true,"useRecentlyEdited":true,"recentLinePrefixMatchMinLength":7,"useImports":true,"useRootPathContext":true,"accepted":false}
